

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "${OLLAMA_PORT}:${OLLAMA_PORT}"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped

  app:
    build: .
    container_name: langchain-app
    environment:
      - MODEL_NAME=${MODEL_NAME}
      - OLLAMA_BASE_URL=http://ollama:${OLLAMA_PORT}
    depends_on:
      - ollama
    volumes:
      - .:/app
    command: python -m langchain_orchestration.main
  

  kafka:
   image: bitnami/kafka:3.6
   container_name: kafka
   ports:
    - "29092:29092"
   environment:
    - KAFKA_CFG_NODE_ID=1
    - KAFKA_CFG_PROCESS_ROLES=broker,controller
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:29093,EXTERNAL://0.0.0.0:29092
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
    - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:29093
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://127.0.0.1:29092
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
   restart: unless-stopped




volumes:
  ollama_data: